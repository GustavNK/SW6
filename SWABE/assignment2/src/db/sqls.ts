
const userFormat = `
  id,
  username,
  name
`
const roomFormat = `
  id,
  number,
  floor,
  has_room_service AS "hasRoomService",
  has_view AS "hasView",
  has_pool AS "hasPool"
`
const reservationFormat = `
  id,
  created_by_user AS "createdByUser",
  reserved_room AS "reservedRoom",
  start_date AS "startDate",
  end_date AS "endDate"
`

export default {
	// SQL Lines for easy use

	// CREATE TABLES

	createUserTable: `
	CREATE TABLE IF NOT EXISTS users (
	  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	  username varchar(50) NOT NULL UNIQUE,
	  name varchar(50) NOT NULL
	);
	`,

	createResevationsTable: `
	CREATE TABLE IF NOT EXISTS reservations (
	  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	  created_by_user integer REFERENCES Users NOT NULL,
	  reserved_room INTEGER REFERENCES Rooms NOT NULL,
	  start_date VARCHAR(50) NOT NULL,
	  end_date VARCHAR(50) NOT NULL
	);
	`,

	createRoomTable: `
	CREATE TABLE IF NOT EXISTS rooms (
	  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	  number INTEGER NOT NULL,
	  floor INTEGER NOT NULL DEFAULT 0,
	  has_room_service BOOLEAN NOT NULL, 
	  has_view BOOLEAN NOT NULL,
	  has_pool BOOLEAN NOT NULL
	);
	`,

	// ADD DUMMY DATA

	createDummyUsers: `
	INSERT INTO users (username, name)
	VALUES 
	  ('MollerSlayer69','Moller Mollersen'), 
	  ('MyLittleBach', 'Bach Bachsen'), 
	  ('GoesBrr','Gus Gustavson'), 
	  ('DankBoi','Simon Simonsen')
	RETURNING ${userFormat} 
`,

	createDummyRooms: `
	INSERT INTO rooms (number, floor, has_room_service, has_view, has_pool)
	VALUES
		(0, 1, true, true, false),
		(1, 2, false, true, true),
		(2, 3, false, true, true),
		(4, 4, true, false, true),
		(69, 5, false, false, false),
		(420, 6, true, true, false)
	  RETURNING ${roomFormat}
	`,

	createDummyReservations: `
	INSERT INTO reservations (created_by_user, reserved_room, start_date, end_date)
	VALUES
		(1, 5, '1889-04-01 05:05:31', '1889-04-20 05:05:32'),
		(2, 1, '2008-11-09 06:09:35', '2008-11-20 06:09:36'),
		(3, 2, '1996-03-12 05:05:11', '1996-03-21 05:05:12'),
		(1, 6, '1999-02-09 00:01:01', '1999-02-12 00:01:02'),
		(3, 6, '2022-05-12 19:04:28', '2022-05-12 19:04:29')
    RETURNING ${reservationFormat}
	`,
  
	//-------------------------
	// QUERIES

	userFromId: `
	SELECT ${userFormat} FROM users 
    WHERE id = ANY ($1)
	`,

	getAllUsers: `
	SELECT ${userFormat} FROM users
	`,

	reservationInterval: `
	SELECT ${reservationFormat} FROM reservations WHERE 
	TO_TIMESTAMP(start_date, 'YYYY-MM-DD HH24:MI:SS')  > TO_TIMESTAMP($1, 'YYYY-MM-DD HH24:MI:SS') 
	  AND TO_TIMESTAMP(start_date, 'YYYY-MM-DD HH24:MI:SS') < TO_TIMESTAMP($2, 'YYYY-MM-DD HH24:MI:SS')
	`,

	getAllReservations: `
 	SELECT ${reservationFormat}
  	FROM reservations
  	`,

	getAllRooms: `
	SELECT ${roomFormat}
	  FROM rooms
	`,

	reservationFromId: `
	SELECT ${reservationFormat} FROM Reservations WHERE id = ANY ($1)
  	`,

	reservationsFromUser: `
	SELECT ${reservationFormat} FROM Reservations WHERE created_by_user = ANY ($1)
  	`,

	roomFromId: `
	SELECT ${roomFormat}
	FROM Rooms WHERE id = ANY ($1)
  	`,

	// MUTATORS

	userInsert: `
	INSERT INTO users (username, name)
	VALUES ($1, $2)
	RETURNING id, username, name
  	`,

	//id, number, floor, hasroomservice, hasview, haspool
	createNewRoom: `
	INSERT INTO rooms (number, floor, has_room_service, has_view, has_pool)
	VALUES ($1, $2, $3, $4, $5)
	RETURNING ${roomFormat}
	`,

	//id, createdByUser(id), reservedroom, startdate, enddate
	createNewReservation: `
	INSERT INTO reservations (created_by_user, reserved_room, start_date, end_date)
	VALUES ($1, $2, $3, $4)
	RETURNING ${reservationFormat}
	`,

}